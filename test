<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>圖像概念互動式小測驗</title>
    <!-- 引入 Tailwind CSS CDN 以實現快速樣式設計 -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* 引入 'Inter' 字體以獲得乾淨現代的外觀 */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem 1rem;
        }
        .quiz-container {
            background-color: #ffffff;
            border-radius: 1.5rem;
            padding: 2.5rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            max-width: 700px;
            width: 100%;
        }
        .question-text {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #1f2937;
            line-height: 1.6;
        }
        .answer-button {
            width: 100%;
            padding: 1rem 1.5rem;
            margin-bottom: 0.75rem;
            border-radius: 0.75rem;
            border: 2px solid #e5e7eb;
            background-color: #f9fafb;
            text-align: left;
            transition: all 0.2s ease-in-out;
            cursor: pointer;
            font-size: 1rem;
            color: #374151;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        .answer-button:hover {
            border-color: #d1d5db;
            background-color: #f3f4f6;
            transform: translateY(-2px);
        }
        .answer-button.correct {
            background-color: #d1fae5;
            border-color: #34d399;
            color: #065f46;
        }
        .answer-button.incorrect {
            background-color: #fee2e2;
            border-color: #f87171;
            color: #991b1b;
        }
        .answer-button:disabled {
            cursor: not-allowed;
        }
        .result-container {
            display: none;
        }
        .result-summary {
            text-align: center;
            margin-bottom: 2rem;
        }
        .result-summary h2 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #1f2937;
        }
        .result-summary p {
            font-size: 1.25rem;
            color: #4b5563;
        }
        .explanation-item {
            background-color: #f9fafb;
            border-radius: 1rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #e5e7eb;
        }
        .explanation-item h3 {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 0.5rem;
        }
        .explanation-item p {
            font-size: 0.95rem;
            color: #4b5563;
        }
        .explanation-item .correct-answer {
            color: #10b981;
            font-weight: 600;
        }
        .explanation-item .user-answer {
            color: #ef4444;
            font-weight: 600;
        }
        .correct-icon {
            color: #10b981;
            font-weight: bold;
            font-size: 1.2rem;
            margin-right: 0.5rem;
        }
        .incorrect-icon {
            color: #ef4444;
            font-weight: bold;
            font-size: 1.2rem;
            margin-right: 0.5rem;
        }
        .hint-text {
            background-color: #e0e7ff;
            color: #312e81;
            padding: 1rem;
            border-radius: 0.75rem;
            margin-top: 1rem;
            line-height: 1.5;
            display: none;
        }
        .footer-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
            gap: 1rem;
        }
        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            transition: background-color 0.2s;
            flex-grow: 1;
        }
        .btn-primary {
            background-color: #2563eb;
            color: white;
        }
        .btn-primary:hover {
            background-color: #1d4ed8;
        }
        .btn-secondary {
            background-color: #e5e7eb;
            color: #4b5563;
        }
        .btn-secondary:hover {
            background-color: #d1d5db;
        }
        .try-again-btn {
            display: none;
            width: 100%;
            margin-top: 2rem;
        }
    </style>
</head>
<body>

<!-- 主內容容器，包含整個測驗 -->
<div class="quiz-container">
    <h1 class="text-3xl font-bold text-center mb-6 text-gray-800">圖像概念互動式小測驗</h1>

    <!-- 測驗問題區塊 -->
    <div id="quiz-section">
        <div class="mb-4">
            <p id="question-number" class="text-sm text-gray-500 mb-2"></p>
            <p id="question-text" class="question-text"></p>
        </div>
        <div id="answer-buttons" class="grid grid-cols-1 gap-3">
            <!-- 答案按鈕將由 JavaScript 動態生成 -->
        </div>

        <p id="hint-text" class="hint-text"></p>

        <div class="footer-buttons">
            <button id="hint-btn" class="btn btn-secondary">顯示提示</button>
            <button id="next-btn" class="btn btn-primary" style="display: none;">下一題</button>
        </div>
    </div>

    <!-- 測驗結果區塊 (預設隱藏) -->
    <div id="result-section" class="result-container">
        <div class="result-summary">
            <h2>測驗結果</h2>
            <p id="final-score"></p>
        </div>
        <div id="explanations">
            <!-- 題目解析將由 JavaScript 動態生成 -->
        </div>
        <button id="try-again-btn" class="btn btn-primary try-again-btn">再試一次</button>
    </div>
</div>

<script>
    // 測驗的 JSON 資料，包含所有問題、答案與解析
    const quizData = {
      "questions": [
        {
          "question": "在數碼圖像中，最小的、單一的、可以被獨立控制的顏色單位是什麼？",
          "answerOptions": [
            { "text": "點陣 (Dot)", "rationale": "點陣通常指的是打印機上的墨點，與數碼圖像中的基本顏色單位不同。", "isCorrect": false },
            { "text": "像素 (Pixel)", "rationale": "像素是數碼圖像中最小的、可獨立控制的單一顏色單位，是所有數碼圖像的基礎。", "isCorrect": true },
            { "text": "色塊 (Color Block)", "rationale": "色塊通常指由多個像素組成的較大區域，不是單一的最小單位。", "isCorrect": false },
            { "text": "位元 (Bit)", "rationale": "位元是電腦最小的資訊單位，用於表示像素的色彩資訊，但它本身不是顏色單位。", "isCorrect": false }
          ],
          "hint": "這個詞是『Picture Element』的縮寫。"
        },
        {
          "question": "一部顯示器標示其解像度為 1920 x 1080，這代表什麼意思？",
          "answerOptions": [
            { "text": "顯示器能顯示的色彩數量", "rationale": "解像度與色彩數量無關，色彩數量由色彩深度決定。", "isCorrect": false },
            { "text": "顯示器的長寬比例", "rationale": "解像度可以推算出長寬比例，但它本身不是長寬比例，而是長度方向和寬度方向的像素數量。", "isCorrect": false },
            { "text": "顯示器能顯示的最高畫面更新率", "rationale": "畫面更新率以赫茲 (Hz) 為單位，與解像度無關。", "isCorrect": false },
            { "text": "顯示器在水平和垂直方向上的像素總數", "rationale": "解像度是指顯示器在水平方向和垂直方向上能顯示的像素數量，1920 x 1080 代表有1920個橫向像素和1080個縱向像素。", "isCorrect": true }
          ],
          "hint": "這個數值通常是用來衡量顯示器能夠呈現的畫面精細度。"
        },
        {
          "question": "在印刷品上，用來衡量圖像清晰度的指標通常是 DPI，請問 DPI 的中文全稱是什麼？",
          "answerOptions": [
            { "text": "每英寸像素數 (Pixels Per Inch)", "rationale": "PPI (Pixels Per Inch) 通常用於數碼顯示器，而 DPI (Dots Per Inch) 則用於打印機和印刷品。", "isCorrect": false },
            { "text": "每點資訊數 (Dots Per Information)", "rationale": "這不是一個標準的術語，DPI中的 'D' 代表 'Dots' (點)。", "isCorrect": false },
            { "text": "每吋點數 (Dots Per Inch)", "rationale": "DPI 全稱是 Dots Per Inch，即每英寸點數，用於衡量打印機在每英寸的長度上可以打印多少個墨點。", "isCorrect": true },
            { "text": "每英寸解像度 (Resolution Per Inch)", "rationale": "解像度通常指像素總數，而 DPI 指的是單位長度內的點數，兩者概念不同。", "isCorrect": false }
          ],
          "hint": "這個術語特別適用於打印機，而另一個相似的術語 PPI 則用於螢幕。"
        },
        {
          "question": "一台數碼相機的感光元件解像度標示為 2400 萬像素，這代表什麼？",
          "answerOptions": [
            { "text": "相機能夠拍攝的每張照片的大小為 2400MB", "rationale": "像素數與檔案大小有關，但2400萬像素不等於2400MB，檔案大小還取決於壓縮格式等因素。", "isCorrect": false },
            { "text": "相機能夠顯示 2400 萬種不同的顏色", "rationale": "色彩數由色彩深度決定，與像素總數無關。", "isCorrect": false },
            { "text": "感光元件上共計有 2400 萬個感光點", "rationale": "像素數量代表感光元件上的感光點總數，2400萬像素代表感光元件上能夠捕捉2400萬個獨立的圖像單元。", "isCorrect": true },
            { "text": "相機的連拍速度為每秒 2400 萬張", "rationale": "連拍速度以每秒張數 (fps) 為單位，與像素數量無關。", "isCorrect": false }
          ],
          "hint": "像素是組成圖像的基本單位，這個數字代表了相機能夠捕捉到的圖像細節總量。"
        },
        {
          "question": "為何將一張低解像度的圖像放大後，畫面會出現『馬賽克』現象？",
          "answerOptions": [
            { "text": "因為圖像壓縮格式不支援放大", "rationale": "大多數圖像格式都支援放大，但放大後圖像品質的下降與壓縮格式無直接關係。", "isCorrect": false },
            { "text": "因為圖像中的色彩數量不足", "rationale": "『馬賽克』現象與色彩數量無關，而是與像素的尺寸有關。", "isCorrect": false },
            { "text": "因為像素數量不足以填滿新的顯示空間，導致單個像素被放大", "rationale": "當圖像放大時，因為原始像素數量不足，每個像素會被拉伸以填滿更大的區域，從而使單個像素變得可見，形成『馬賽克』效果。", "isCorrect": true },
            { "text": "因為顯示器無法處理較小的像素", "rationale": "顯示器通常能夠處理非常小的像素，問題在於圖像本身缺乏足夠的像素細節。", "isCorrect": false }
          ],
          "hint": "想想看，放大圖像時，系統是用什麼來填充額外的空間的？"
        },
        {
          "question": "在 RGB 色彩模式中，RGB 三個字母分別代表哪三種原色？",
          "answerOptions": [
            { "text": "紅色 (Red)、綠色 (Green)、藍色 (Blue)", "rationale": "RGB 是 Red、Green、Blue 的縮寫，這三種是電腦顯示器用於混合生成所有顏色的光學三原色。", "isCorrect": true },
            { "text": "紅色 (Red)、黃色 (Yellow)、藍色 (Blue)", "rationale": "紅黃藍是顏料三原色，通常用於繪畫或印刷，與RGB色彩模式不同。", "isCorrect": false },
            { "text": "紅色 (Red)、灰色 (Gray)、黑色 (Black)", "rationale": "這不是 RGB 色彩模式的組成部分。", "isCorrect": false },
            { "text": "紅色 (Red)、金色 (Gold)、黑色 (Black)", "rationale": "這不是 RGB 色彩模式的組成部分。", "isCorrect": false }
          ],
          "hint": "這種模式是螢幕顯示色彩的基礎，它的三種原色都是光線的顏色。"
        },
        {
          "question": "以下哪一種輸入設備主要用於將實體圖像轉換為數碼圖像？",
          "answerOptions": [
            { "text": "繪圖板 (Graphics Tablet)", "rationale": "繪圖板是用於手繪數碼圖像的輸入設備，而非將實體圖像轉換為數碼。", "isCorrect": false },
            { "text": "投影機 (Projector)", "rationale": "投影機是輸出設備，用於將數碼圖像投影到螢幕上。", "isCorrect": false },
            { "text": "掃描器 (Scanner)", "rationale": "掃描器的工作原理是透過光學掃描來捕捉實體文件或圖像的細節，並將其轉換為數碼數據。", "isCorrect": true },
            { "text": "打印機 (Printer)", "rationale": "打印機是輸出設備，用於將數碼圖像轉換為實體印刷品。", "isCorrect": false }
          ],
          "hint": "這個設備的功能與相機相反，它將現有的實物內容變成數碼檔案。"
        },
        {
          "question": "『色彩深度』是用來衡量什麼的？",
          "answerOptions": [
            { "text": "圖像的長寬比例", "rationale": "長寬比例由圖像的像素尺寸決定，與色彩深度無關。", "isCorrect": false },
            { "text": "每個像素可以儲存的色彩資訊量", "rationale": "色彩深度衡量每個像素用於表示顏色的位元數，位元數越高，能顯示的顏色數就越多，色彩過渡也越平滑。", "isCorrect": true },
            { "text": "圖像中像素的總數量", "rationale": "像素的總數量由解像度決定，與色彩深度無關。", "isCorrect": false },
            { "text": "圖像在螢幕上顯示的速度", "rationale": "圖像顯示速度與色彩深度無關，而與畫面更新率等因素有關。", "isCorrect": false }
          ],
          "hint": "這個指標通常以位元 (bit) 為單位，它決定了圖像色彩的豐富程度。"
        }
      ]
    };

    // DOM 元素參考
    const quizSection = document.getElementById('quiz-section');
    const resultSection = document.getElementById('result-section');
    const questionNumberEl = document.getElementById('question-number');
    const questionTextEl = document.getElementById('question-text');
    const answerButtonsContainer = document.getElementById('answer-buttons');
    const hintBtn = document.getElementById('hint-btn');
    const nextBtn = document.getElementById('next-btn');
    const hintTextEl = document.getElementById('hint-text');
    const finalScoreEl = document.getElementById('final-score');
    const explanationsContainer = document.getElementById('explanations');
    const tryAgainBtn = document.getElementById('try-again-btn');

    // 狀態變數
    let currentQuestionIndex = 0;
    let score = 0;
    let quizResults = [];
    let questionAnswered = false;

    // 顯示當前問題
    function displayQuestion() {
        // 重設 UI 狀態
        answerButtonsContainer.innerHTML = '';
        nextBtn.style.display = 'none';
        hintBtn.style.display = 'block';
        hintTextEl.style.display = 'none';
        questionAnswered = false;

        if (currentQuestionIndex < quizData.questions.length) {
            const currentQuestion = quizData.questions[currentQuestionIndex];
            questionNumberEl.textContent = `第 ${currentQuestionIndex + 1} 題 / 共 ${quizData.questions.length} 題`;
            questionTextEl.textContent = currentQuestion.question;

            currentQuestion.answerOptions.forEach(option => {
                const button = document.createElement('button');
                button.textContent = option.text;
                button.classList.add('answer-button');
                if (option.isCorrect) {
                    button.dataset.isCorrect = true;
                }
                button.addEventListener('click', () => handleAnswerClick(button, option));
                answerButtonsContainer.appendChild(button);
            });
        } else {
            showResults();
        }
    }

    // 處理答案點擊事件
    function handleAnswerClick(selectedButton, selectedOption) {
        if (questionAnswered) return;
        questionAnswered = true;

        const isCorrect = selectedButton.dataset.isCorrect === 'true';
        if (isCorrect) {
            score++;
            selectedButton.classList.add('correct');
        } else {
            selectedButton.classList.add('incorrect');
            const correctButton = Array.from(answerButtonsContainer.children).find(btn => btn.dataset.isCorrect === 'true');
            if (correctButton) {
                correctButton.classList.add('correct');
            }
        }

        // 儲存結果以便後續顯示
        quizResults.push({
            question: quizData.questions[currentQuestionIndex].question,
            correctAnswer: quizData.questions[currentQuestionIndex].answerOptions.find(opt => opt.isCorrect).text,
            userAnswer: selectedOption.text,
            isCorrect: isCorrect,
            rationale: selectedOption.rationale
        });

        // 禁用所有按鈕
        Array.from(answerButtonsContainer.children).forEach(button => {
            button.disabled = true;
        });

        // 顯示下一題按鈕
        nextBtn.style.display = 'block';
        hintBtn.style.display = 'none';
    }

    // 顯示測驗結果與解析
    function showResults() {
        quizSection.style.display = 'none';
        resultSection.style.display = 'block';

        finalScoreEl.textContent = `您的得分為 ${score} / ${quizData.questions.length}。`;
        
        explanationsContainer.innerHTML = '';
        quizResults.forEach((result, index) => {
            const explanationItem = document.createElement('div');
            explanationItem.classList.add('explanation-item');
            
            explanationItem.innerHTML = `
                <div class="flex items-start mb-2">
                    ${result.isCorrect ? '<span class="correct-icon">✔</span>' : '<span class="incorrect-icon">✖</span>'}
                    <h3>第 ${index + 1} 題：${result.question}</h3>
                </div>
                <p><strong>您的答案：</strong> <span class="${result.isCorrect ? 'correct-answer' : 'user-answer'}">${result.userAnswer}</span></p>
                <p class="mb-2"><strong>正確答案：</strong> <span class="correct-answer">${result.correctAnswer}</span></p>
                <p><strong>解析與重點：</strong></p>
                <p>${result.rationale}</p>
            `;
            explanationsContainer.appendChild(explanationItem);
        });

        tryAgainBtn.style.display = 'block';
    }

    // 重設測驗
    function resetQuiz() {
        currentQuestionIndex = 0;
        score = 0;
        quizResults = [];
        quizSection.style.display = 'block';
        resultSection.style.display = 'none';
        displayQuestion();
    }

    // 事件監聽器
    nextBtn.addEventListener('click', () => {
        currentQuestionIndex++;
        displayQuestion();
    });

    hintBtn.addEventListener('click', () => {
        const currentQuestion = quizData.questions[currentQuestionIndex];
        if (currentQuestion.hint) {
            hintTextEl.textContent = `提示：${currentQuestion.hint}`;
            hintTextEl.style.display = 'block';
        }
    });

    tryAgainBtn.addEventListener('click', resetQuiz);

    // 載入時啟動測驗
    window.onload = displayQuestion;
</script>

</body>
</html>
